{"version":3,"sources":["duck/time.js","duck/store.js","TimeZoneConverterApp.js","index.js"],"names":["CONVERTER","ERROR","convertTimeMiddleware","formValues","dispatch","fetch","method","headers","Accept","body","JSON","stringify","then","data","json","response","status","type","convertTime","setErrorConverter","catch","err","console","log","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","time","state","action","store","createStore","applyMiddleware","thunk","TimeZoneConverterApp","useDispatch","useSelector","useFormik","initialValues","timezone","onSubmit","values","handleSubmit","handleChange","touched","errors","className","style","height","backgroundColor","padding","textAlign","color","fontWeight","fontSize","marginBottom","map","noValidate","htmlFor","id","name","placeholder","onChange","value","toUpperCase","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a9ecdf14.chunk.js","sourcesContent":["\n// Acion Types\nconst CONVERTER = \"[Converter] Time UTC\";\nconst ERROR = \"[Converter] Time UTC Error\";\n\n//Reducer\nexport const timeReducer = (state = {}, action) => {\n  switch (action.type) {\n    case CONVERTER:\n      return { ...action.response };\n    case ERROR:\n      return { ...action.response };\n    default:\n      return state;\n  }\n};\n\n//Action Creators\nexport const convertTime = (response) => ({\n  type: CONVERTER,\n  response,\n});\n\nexport const setErrorConverter = (response) => ({\n  type: ERROR,\n  response,\n});\n\n// Middleware\n\nexport const convertTimeMiddleware = (formValues) => {\n  return (dispatch) => {\n    fetch(\"http://localhost:8080/api\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(formValues),\n    })\n      .then((data) => data.json())\n      .then(({ response }) => {\n        if (response.status) {\n          dispatch(convertTime(response));\n        } else {\n          dispatch(setErrorConverter(response));\n        }\n      })\n      .catch((err) => console.log(\"err\", err));\n  };\n};\n","import { createStore, applyMiddleware, combineReducers, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { timeReducer } from \"./time\";\n\nconst composeEnhancers =\n  (typeof window !== \"undefined\" &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\n  compose;\n\nconst reducers = combineReducers({\n  time: timeReducer,\n});\n\nexport const store = createStore(\n  reducers,\n  composeEnhancers(applyMiddleware(thunk))\n);\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { convertTimeMiddleware } from \"./duck/time\";\n\nexport const TimeZoneConverterApp = () => {\n  const dispatch = useDispatch();\n  const state = useSelector((state) => state.time);\n\n  const { handleSubmit, handleChange, values, touched, errors } = useFormik({\n    initialValues: {\n      time: \"5:34:23\",\n      timezone: \"-4:00\",\n    },\n\n    onSubmit: (values) => {\n      dispatch(convertTimeMiddleware(values));\n    },\n  });\n\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row\" style={{ height: \"100vh\" }}>\n        <div\n          className=\"col-md-6\"\n          style={{\n            backgroundColor: \"#252121\",\n            padding: \"50px\",\n          }}\n        >\n          <div\n            className=\"d-flex justify-content-center align-items-center\"\n            style={{ height: \"100%\" }}\n          >\n            <div className=\"container\">\n              <h1\n                style={{\n                  textAlign: \"center\",\n                  color: \"#FFF\",\n                  fontWeight: \"bold\",\n                  fontSize: \"28px\",\n                  marginBottom: \"40px\",\n                }}\n              >\n                Convert your time to UTC\n              </h1>\n              {state.errors && (\n                <div className=\"alert alert-danger\">\n                  {state.errors.map((err) => (\n                    <p key={err}>{err}</p>\n                  ))}\n                </div>\n              )}\n\n              <form\n                onSubmit={handleSubmit}\n                className=\"row g-3 needs-validation\"\n                noValidate\n              >\n                <div className=\"col-md-12\">\n                  <label htmlFor=\"time\" className=\"form-label text-white\">\n                    Time\n                  </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"time\"\n                    name=\"time\"\n                    placeholder=\"Ej. 18:23:21\"\n                    onChange={handleChange}\n                    value={values.time}\n                  />\n                  {touched.time && errors.time && (\n                    <div className=\"text-danger\">{errors.time}</div>\n                  )}\n                </div>\n                <div className=\"col-md-12\">\n                  <label htmlFor=\"timezone\" className=\"form-label text-white\">\n                    Time Zone\n                  </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"timezone\"\n                    name=\"timezone\"\n                    placeholder=\"Ej. -4:30\"\n                    value={values.timezone}\n                    onChange={handleChange}\n                  />\n\n                  {touched.timezone && errors.timezone && (\n                    <div className=\"text-danger\">{errors.timezone}</div>\n                  )}\n                </div>\n\n                <div className=\"col-12\">\n                  <button className=\"btn btn-primary w-100\" type=\"submit\">\n                    Convert Time Now\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-md-6\" style={{ backgroundColor: \"#FFFFFF\" }}>\n          <div\n            className=\"d-flex justify-content-center align-items-center\"\n            style={{ height: \"100%\" }}\n          >\n            <div style={{ textAlign: \"center\" }}>\n              <h1 style={{ fontSize: \"40px\" }}>Time Zone Converter</h1>\n              {state.time && (\n                <div>\n                  <h1 style={{ fontSize: \"30px\" }}>Converter Results:</h1>\n                  <p style={{ fontSize: \"30px\" }}>\n                    {state.time} {state.timezone.toUpperCase()}\n                  </p>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./duck/store\";\nimport { TimeZoneConverterApp } from \"./TimeZoneConverterApp\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <TimeZoneConverterApp />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}